// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate.proto

#ifndef PROTOBUF_gate_2eproto__INCLUDED
#define PROTOBUF_gate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gate_2eproto();
void protobuf_AssignDesc_gate_2eproto();
void protobuf_ShutdownFile_gate_2eproto();

class PGateReq;
class PNodeItem;
class PGateItem;
class PUpdateGates;
class PUpdateNode;
class PUpdateNodes;
class PGateResp;
class PNodeReq;
class PNodeResp;
class PNpcRes;
class PItemRes;
class PResultReq;
class PResultResp;

// ===================================================================

class PGateReq : public ::google::protobuf::Message {
 public:
  PGateReq();
  virtual ~PGateReq();

  PGateReq(const PGateReq& from);

  inline PGateReq& operator=(const PGateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PGateReq& default_instance();

  void Swap(PGateReq* other);

  // implements Message ----------------------------------------------

  PGateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PGateReq& from);
  void MergeFrom(const PGateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PGateReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PGateReq* default_instance_;
};
// -------------------------------------------------------------------

class PNodeItem : public ::google::protobuf::Message {
 public:
  PNodeItem();
  virtual ~PNodeItem();

  PNodeItem(const PNodeItem& from);

  inline PNodeItem& operator=(const PNodeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PNodeItem& default_instance();

  void Swap(PNodeItem* other);

  // implements Message ----------------------------------------------

  PNodeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PNodeItem& from);
  void MergeFrom(const PNodeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 xID = 2;
  inline bool has_xid() const;
  inline void clear_xid();
  static const int kXIDFieldNumber = 2;
  inline ::google::protobuf::int32 xid() const;
  inline void set_xid(::google::protobuf::int32 value);

  // required int32 star = 1;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // required int32 times = 3;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 3;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PNodeItem)
 private:
  inline void set_has_xid();
  inline void clear_has_xid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 xid_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PNodeItem* default_instance_;
};
// -------------------------------------------------------------------

class PGateItem : public ::google::protobuf::Message {
 public:
  PGateItem();
  virtual ~PGateItem();

  PGateItem(const PGateItem& from);

  inline PGateItem& operator=(const PGateItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PGateItem& default_instance();

  void Swap(PGateItem* other);

  // implements Message ----------------------------------------------

  PGateItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PGateItem& from);
  void MergeFrom(const PGateItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isLock = 1;
  inline bool has_islock() const;
  inline void clear_islock();
  static const int kIsLockFieldNumber = 1;
  inline bool islock() const;
  inline void set_islock(bool value);

  // required int32 gateID = 2;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIDFieldNumber = 2;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // repeated .PNodeItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::PNodeItem& items(int index) const;
  inline ::PNodeItem* mutable_items(int index);
  inline ::PNodeItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::PNodeItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::PNodeItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:PGateItem)
 private:
  inline void set_has_islock();
  inline void clear_has_islock();
  inline void set_has_gateid();
  inline void clear_has_gateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool islock_;
  ::google::protobuf::int32 gateid_;
  ::google::protobuf::RepeatedPtrField< ::PNodeItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PGateItem* default_instance_;
};
// -------------------------------------------------------------------

class PUpdateGates : public ::google::protobuf::Message {
 public:
  PUpdateGates();
  virtual ~PUpdateGates();

  PUpdateGates(const PUpdateGates& from);

  inline PUpdateGates& operator=(const PUpdateGates& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PUpdateGates& default_instance();

  void Swap(PUpdateGates* other);

  // implements Message ----------------------------------------------

  PUpdateGates* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PUpdateGates& from);
  void MergeFrom(const PUpdateGates& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PGateItem gates = 1;
  inline int gates_size() const;
  inline void clear_gates();
  static const int kGatesFieldNumber = 1;
  inline const ::PGateItem& gates(int index) const;
  inline ::PGateItem* mutable_gates(int index);
  inline ::PGateItem* add_gates();
  inline const ::google::protobuf::RepeatedPtrField< ::PGateItem >&
      gates() const;
  inline ::google::protobuf::RepeatedPtrField< ::PGateItem >*
      mutable_gates();

  // @@protoc_insertion_point(class_scope:PUpdateGates)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PGateItem > gates_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PUpdateGates* default_instance_;
};
// -------------------------------------------------------------------

class PUpdateNode : public ::google::protobuf::Message {
 public:
  PUpdateNode();
  virtual ~PUpdateNode();

  PUpdateNode(const PUpdateNode& from);

  inline PUpdateNode& operator=(const PUpdateNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PUpdateNode& default_instance();

  void Swap(PUpdateNode* other);

  // implements Message ----------------------------------------------

  PUpdateNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PUpdateNode& from);
  void MergeFrom(const PUpdateNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PNodeItem nodeItem = 1;
  inline bool has_nodeitem() const;
  inline void clear_nodeitem();
  static const int kNodeItemFieldNumber = 1;
  inline const ::PNodeItem& nodeitem() const;
  inline ::PNodeItem* mutable_nodeitem();
  inline ::PNodeItem* release_nodeitem();
  inline void set_allocated_nodeitem(::PNodeItem* nodeitem);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PUpdateNode)
 private:
  inline void set_has_nodeitem();
  inline void clear_has_nodeitem();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PNodeItem* nodeitem_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PUpdateNode* default_instance_;
};
// -------------------------------------------------------------------

class PUpdateNodes : public ::google::protobuf::Message {
 public:
  PUpdateNodes();
  virtual ~PUpdateNodes();

  PUpdateNodes(const PUpdateNodes& from);

  inline PUpdateNodes& operator=(const PUpdateNodes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PUpdateNodes& default_instance();

  void Swap(PUpdateNodes* other);

  // implements Message ----------------------------------------------

  PUpdateNodes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PUpdateNodes& from);
  void MergeFrom(const PUpdateNodes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gateID = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIDFieldNumber = 1;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // repeated .PUpdateNode nodeItems = 2;
  inline int nodeitems_size() const;
  inline void clear_nodeitems();
  static const int kNodeItemsFieldNumber = 2;
  inline const ::PUpdateNode& nodeitems(int index) const;
  inline ::PUpdateNode* mutable_nodeitems(int index);
  inline ::PUpdateNode* add_nodeitems();
  inline const ::google::protobuf::RepeatedPtrField< ::PUpdateNode >&
      nodeitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::PUpdateNode >*
      mutable_nodeitems();

  // @@protoc_insertion_point(class_scope:PUpdateNodes)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PUpdateNode > nodeitems_;
  ::google::protobuf::int32 gateid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PUpdateNodes* default_instance_;
};
// -------------------------------------------------------------------

class PGateResp : public ::google::protobuf::Message {
 public:
  PGateResp();
  virtual ~PGateResp();

  PGateResp(const PGateResp& from);

  inline PGateResp& operator=(const PGateResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PGateResp& default_instance();

  void Swap(PGateResp* other);

  // implements Message ----------------------------------------------

  PGateResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PGateResp& from);
  void MergeFrom(const PGateResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PGateItem gates = 1;
  inline int gates_size() const;
  inline void clear_gates();
  static const int kGatesFieldNumber = 1;
  inline const ::PGateItem& gates(int index) const;
  inline ::PGateItem* mutable_gates(int index);
  inline ::PGateItem* add_gates();
  inline const ::google::protobuf::RepeatedPtrField< ::PGateItem >&
      gates() const;
  inline ::google::protobuf::RepeatedPtrField< ::PGateItem >*
      mutable_gates();

  // @@protoc_insertion_point(class_scope:PGateResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PGateItem > gates_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PGateResp* default_instance_;
};
// -------------------------------------------------------------------

class PNodeReq : public ::google::protobuf::Message {
 public:
  PNodeReq();
  virtual ~PNodeReq();

  PNodeReq(const PNodeReq& from);

  inline PNodeReq& operator=(const PNodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PNodeReq& default_instance();

  void Swap(PNodeReq* other);

  // implements Message ----------------------------------------------

  PNodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PNodeReq& from);
  void MergeFrom(const PNodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gateId = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIdFieldNumber = 1;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // required int32 xId = 2;
  inline bool has_xid() const;
  inline void clear_xid();
  static const int kXIdFieldNumber = 2;
  inline ::google::protobuf::int32 xid() const;
  inline void set_xid(::google::protobuf::int32 value);

  // required int32 groupId = 3;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PNodeReq)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_xid();
  inline void clear_has_xid();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gateid_;
  ::google::protobuf::int32 xid_;
  ::google::protobuf::int32 groupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PNodeReq* default_instance_;
};
// -------------------------------------------------------------------

class PNodeResp : public ::google::protobuf::Message {
 public:
  PNodeResp();
  virtual ~PNodeResp();

  PNodeResp(const PNodeResp& from);

  inline PNodeResp& operator=(const PNodeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PNodeResp& default_instance();

  void Swap(PNodeResp* other);

  // implements Message ----------------------------------------------

  PNodeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PNodeResp& from);
  void MergeFrom(const PNodeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PNodeResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PNodeResp* default_instance_;
};
// -------------------------------------------------------------------

class PNpcRes : public ::google::protobuf::Message {
 public:
  PNpcRes();
  virtual ~PNpcRes();

  PNpcRes(const PNpcRes& from);

  inline PNpcRes& operator=(const PNpcRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PNpcRes& default_instance();

  void Swap(PNpcRes* other);

  // implements Message ----------------------------------------------

  PNpcRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PNpcRes& from);
  void MergeFrom(const PNpcRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 xId = 1;
  inline bool has_xid() const;
  inline void clear_xid();
  static const int kXIdFieldNumber = 1;
  inline ::google::protobuf::int64 xid() const;
  inline void set_xid(::google::protobuf::int64 value);

  // required int32 addLvl = 2;
  inline bool has_addlvl() const;
  inline void clear_addlvl();
  static const int kAddLvlFieldNumber = 2;
  inline ::google::protobuf::int32 addlvl() const;
  inline void set_addlvl(::google::protobuf::int32 value);

  // required int32 addExp = 3;
  inline bool has_addexp() const;
  inline void clear_addexp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::int32 addexp() const;
  inline void set_addexp(::google::protobuf::int32 value);

  // required int32 curLvl = 4;
  inline bool has_curlvl() const;
  inline void clear_curlvl();
  static const int kCurLvlFieldNumber = 4;
  inline ::google::protobuf::int32 curlvl() const;
  inline void set_curlvl(::google::protobuf::int32 value);

  // required int32 curExp = 5;
  inline bool has_curexp() const;
  inline void clear_curexp();
  static const int kCurExpFieldNumber = 5;
  inline ::google::protobuf::int32 curexp() const;
  inline void set_curexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PNpcRes)
 private:
  inline void set_has_xid();
  inline void clear_has_xid();
  inline void set_has_addlvl();
  inline void clear_has_addlvl();
  inline void set_has_addexp();
  inline void clear_has_addexp();
  inline void set_has_curlvl();
  inline void clear_has_curlvl();
  inline void set_has_curexp();
  inline void clear_has_curexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 xid_;
  ::google::protobuf::int32 addlvl_;
  ::google::protobuf::int32 addexp_;
  ::google::protobuf::int32 curlvl_;
  ::google::protobuf::int32 curexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PNpcRes* default_instance_;
};
// -------------------------------------------------------------------

class PItemRes : public ::google::protobuf::Message {
 public:
  PItemRes();
  virtual ~PItemRes();

  PItemRes(const PItemRes& from);

  inline PItemRes& operator=(const PItemRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PItemRes& default_instance();

  void Swap(PItemRes* other);

  // implements Message ----------------------------------------------

  PItemRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PItemRes& from);
  void MergeFrom(const PItemRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 itemNum = 2;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PItemRes)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PItemRes* default_instance_;
};
// -------------------------------------------------------------------

class PResultReq : public ::google::protobuf::Message {
 public:
  PResultReq();
  virtual ~PResultReq();

  PResultReq(const PResultReq& from);

  inline PResultReq& operator=(const PResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PResultReq& default_instance();

  void Swap(PResultReq* other);

  // implements Message ----------------------------------------------

  PResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PResultReq& from);
  void MergeFrom(const PResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gateId = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIdFieldNumber = 1;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // required int32 xId = 2;
  inline bool has_xid() const;
  inline void clear_xid();
  static const int kXIdFieldNumber = 2;
  inline ::google::protobuf::int32 xid() const;
  inline void set_xid(::google::protobuf::int32 value);

  // required int32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PResultReq)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_xid();
  inline void clear_has_xid();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gateid_;
  ::google::protobuf::int32 xid_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PResultReq* default_instance_;
};
// -------------------------------------------------------------------

class PResultResp : public ::google::protobuf::Message {
 public:
  PResultResp();
  virtual ~PResultResp();

  PResultResp(const PResultResp& from);

  inline PResultResp& operator=(const PResultResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PResultResp& default_instance();

  void Swap(PResultResp* other);

  // implements Message ----------------------------------------------

  PResultResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PResultResp& from);
  void MergeFrom(const PResultResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 star = 1;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // required int32 groupLvl = 2;
  inline bool has_grouplvl() const;
  inline void clear_grouplvl();
  static const int kGroupLvlFieldNumber = 2;
  inline ::google::protobuf::int32 grouplvl() const;
  inline void set_grouplvl(::google::protobuf::int32 value);

  // required int32 curGroupLvl = 3;
  inline bool has_curgrouplvl() const;
  inline void clear_curgrouplvl();
  static const int kCurGroupLvlFieldNumber = 3;
  inline ::google::protobuf::int32 curgrouplvl() const;
  inline void set_curgrouplvl(::google::protobuf::int32 value);

  // required int32 groupExp = 4;
  inline bool has_groupexp() const;
  inline void clear_groupexp();
  static const int kGroupExpFieldNumber = 4;
  inline ::google::protobuf::int32 groupexp() const;
  inline void set_groupexp(::google::protobuf::int32 value);

  // required int32 coin = 5;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 5;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // repeated .PNpcRes npcs = 6;
  inline int npcs_size() const;
  inline void clear_npcs();
  static const int kNpcsFieldNumber = 6;
  inline const ::PNpcRes& npcs(int index) const;
  inline ::PNpcRes* mutable_npcs(int index);
  inline ::PNpcRes* add_npcs();
  inline const ::google::protobuf::RepeatedPtrField< ::PNpcRes >&
      npcs() const;
  inline ::google::protobuf::RepeatedPtrField< ::PNpcRes >*
      mutable_npcs();

  // repeated .PItemRes items = 7;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 7;
  inline const ::PItemRes& items(int index) const;
  inline ::PItemRes* mutable_items(int index);
  inline ::PItemRes* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::PItemRes >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::PItemRes >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:PResultResp)
 private:
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_grouplvl();
  inline void clear_has_grouplvl();
  inline void set_has_curgrouplvl();
  inline void clear_has_curgrouplvl();
  inline void set_has_groupexp();
  inline void clear_has_groupexp();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 grouplvl_;
  ::google::protobuf::int32 curgrouplvl_;
  ::google::protobuf::int32 groupexp_;
  ::google::protobuf::RepeatedPtrField< ::PNpcRes > npcs_;
  ::google::protobuf::RepeatedPtrField< ::PItemRes > items_;
  ::google::protobuf::int32 coin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PResultResp* default_instance_;
};
// ===================================================================


// ===================================================================

// PGateReq

// -------------------------------------------------------------------

// PNodeItem

// required int32 xID = 2;
inline bool PNodeItem::has_xid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PNodeItem::set_has_xid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PNodeItem::clear_has_xid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PNodeItem::clear_xid() {
  xid_ = 0;
  clear_has_xid();
}
inline ::google::protobuf::int32 PNodeItem::xid() const {
  return xid_;
}
inline void PNodeItem::set_xid(::google::protobuf::int32 value) {
  set_has_xid();
  xid_ = value;
}

// required int32 star = 1;
inline bool PNodeItem::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PNodeItem::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PNodeItem::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PNodeItem::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 PNodeItem::star() const {
  return star_;
}
inline void PNodeItem::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// required int32 times = 3;
inline bool PNodeItem::has_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PNodeItem::set_has_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PNodeItem::clear_has_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PNodeItem::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 PNodeItem::times() const {
  return times_;
}
inline void PNodeItem::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// PGateItem

// required bool isLock = 1;
inline bool PGateItem::has_islock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PGateItem::set_has_islock() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PGateItem::clear_has_islock() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PGateItem::clear_islock() {
  islock_ = false;
  clear_has_islock();
}
inline bool PGateItem::islock() const {
  return islock_;
}
inline void PGateItem::set_islock(bool value) {
  set_has_islock();
  islock_ = value;
}

// required int32 gateID = 2;
inline bool PGateItem::has_gateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PGateItem::set_has_gateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PGateItem::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PGateItem::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 PGateItem::gateid() const {
  return gateid_;
}
inline void PGateItem::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
}

// repeated .PNodeItem items = 3;
inline int PGateItem::items_size() const {
  return items_.size();
}
inline void PGateItem::clear_items() {
  items_.Clear();
}
inline const ::PNodeItem& PGateItem::items(int index) const {
  return items_.Get(index);
}
inline ::PNodeItem* PGateItem::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::PNodeItem* PGateItem::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PNodeItem >&
PGateItem::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::PNodeItem >*
PGateItem::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// PUpdateGates

// repeated .PGateItem gates = 1;
inline int PUpdateGates::gates_size() const {
  return gates_.size();
}
inline void PUpdateGates::clear_gates() {
  gates_.Clear();
}
inline const ::PGateItem& PUpdateGates::gates(int index) const {
  return gates_.Get(index);
}
inline ::PGateItem* PUpdateGates::mutable_gates(int index) {
  return gates_.Mutable(index);
}
inline ::PGateItem* PUpdateGates::add_gates() {
  return gates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PGateItem >&
PUpdateGates::gates() const {
  return gates_;
}
inline ::google::protobuf::RepeatedPtrField< ::PGateItem >*
PUpdateGates::mutable_gates() {
  return &gates_;
}

// -------------------------------------------------------------------

// PUpdateNode

// required .PNodeItem nodeItem = 1;
inline bool PUpdateNode::has_nodeitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PUpdateNode::set_has_nodeitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PUpdateNode::clear_has_nodeitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PUpdateNode::clear_nodeitem() {
  if (nodeitem_ != NULL) nodeitem_->::PNodeItem::Clear();
  clear_has_nodeitem();
}
inline const ::PNodeItem& PUpdateNode::nodeitem() const {
  return nodeitem_ != NULL ? *nodeitem_ : *default_instance_->nodeitem_;
}
inline ::PNodeItem* PUpdateNode::mutable_nodeitem() {
  set_has_nodeitem();
  if (nodeitem_ == NULL) nodeitem_ = new ::PNodeItem;
  return nodeitem_;
}
inline ::PNodeItem* PUpdateNode::release_nodeitem() {
  clear_has_nodeitem();
  ::PNodeItem* temp = nodeitem_;
  nodeitem_ = NULL;
  return temp;
}
inline void PUpdateNode::set_allocated_nodeitem(::PNodeItem* nodeitem) {
  delete nodeitem_;
  nodeitem_ = nodeitem;
  if (nodeitem) {
    set_has_nodeitem();
  } else {
    clear_has_nodeitem();
  }
}

// required int32 type = 2;
inline bool PUpdateNode::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PUpdateNode::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PUpdateNode::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PUpdateNode::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PUpdateNode::type() const {
  return type_;
}
inline void PUpdateNode::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// PUpdateNodes

// required int32 gateID = 1;
inline bool PUpdateNodes::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PUpdateNodes::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PUpdateNodes::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PUpdateNodes::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 PUpdateNodes::gateid() const {
  return gateid_;
}
inline void PUpdateNodes::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
}

// repeated .PUpdateNode nodeItems = 2;
inline int PUpdateNodes::nodeitems_size() const {
  return nodeitems_.size();
}
inline void PUpdateNodes::clear_nodeitems() {
  nodeitems_.Clear();
}
inline const ::PUpdateNode& PUpdateNodes::nodeitems(int index) const {
  return nodeitems_.Get(index);
}
inline ::PUpdateNode* PUpdateNodes::mutable_nodeitems(int index) {
  return nodeitems_.Mutable(index);
}
inline ::PUpdateNode* PUpdateNodes::add_nodeitems() {
  return nodeitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PUpdateNode >&
PUpdateNodes::nodeitems() const {
  return nodeitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::PUpdateNode >*
PUpdateNodes::mutable_nodeitems() {
  return &nodeitems_;
}

// -------------------------------------------------------------------

// PGateResp

// repeated .PGateItem gates = 1;
inline int PGateResp::gates_size() const {
  return gates_.size();
}
inline void PGateResp::clear_gates() {
  gates_.Clear();
}
inline const ::PGateItem& PGateResp::gates(int index) const {
  return gates_.Get(index);
}
inline ::PGateItem* PGateResp::mutable_gates(int index) {
  return gates_.Mutable(index);
}
inline ::PGateItem* PGateResp::add_gates() {
  return gates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PGateItem >&
PGateResp::gates() const {
  return gates_;
}
inline ::google::protobuf::RepeatedPtrField< ::PGateItem >*
PGateResp::mutable_gates() {
  return &gates_;
}

// -------------------------------------------------------------------

// PNodeReq

// required int32 gateId = 1;
inline bool PNodeReq::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PNodeReq::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PNodeReq::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PNodeReq::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 PNodeReq::gateid() const {
  return gateid_;
}
inline void PNodeReq::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
}

// required int32 xId = 2;
inline bool PNodeReq::has_xid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PNodeReq::set_has_xid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PNodeReq::clear_has_xid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PNodeReq::clear_xid() {
  xid_ = 0;
  clear_has_xid();
}
inline ::google::protobuf::int32 PNodeReq::xid() const {
  return xid_;
}
inline void PNodeReq::set_xid(::google::protobuf::int32 value) {
  set_has_xid();
  xid_ = value;
}

// required int32 groupId = 3;
inline bool PNodeReq::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PNodeReq::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PNodeReq::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PNodeReq::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 PNodeReq::groupid() const {
  return groupid_;
}
inline void PNodeReq::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// -------------------------------------------------------------------

// PNodeResp

// -------------------------------------------------------------------

// PNpcRes

// required int64 xId = 1;
inline bool PNpcRes::has_xid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PNpcRes::set_has_xid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PNpcRes::clear_has_xid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PNpcRes::clear_xid() {
  xid_ = GOOGLE_LONGLONG(0);
  clear_has_xid();
}
inline ::google::protobuf::int64 PNpcRes::xid() const {
  return xid_;
}
inline void PNpcRes::set_xid(::google::protobuf::int64 value) {
  set_has_xid();
  xid_ = value;
}

// required int32 addLvl = 2;
inline bool PNpcRes::has_addlvl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PNpcRes::set_has_addlvl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PNpcRes::clear_has_addlvl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PNpcRes::clear_addlvl() {
  addlvl_ = 0;
  clear_has_addlvl();
}
inline ::google::protobuf::int32 PNpcRes::addlvl() const {
  return addlvl_;
}
inline void PNpcRes::set_addlvl(::google::protobuf::int32 value) {
  set_has_addlvl();
  addlvl_ = value;
}

// required int32 addExp = 3;
inline bool PNpcRes::has_addexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PNpcRes::set_has_addexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PNpcRes::clear_has_addexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PNpcRes::clear_addexp() {
  addexp_ = 0;
  clear_has_addexp();
}
inline ::google::protobuf::int32 PNpcRes::addexp() const {
  return addexp_;
}
inline void PNpcRes::set_addexp(::google::protobuf::int32 value) {
  set_has_addexp();
  addexp_ = value;
}

// required int32 curLvl = 4;
inline bool PNpcRes::has_curlvl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PNpcRes::set_has_curlvl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PNpcRes::clear_has_curlvl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PNpcRes::clear_curlvl() {
  curlvl_ = 0;
  clear_has_curlvl();
}
inline ::google::protobuf::int32 PNpcRes::curlvl() const {
  return curlvl_;
}
inline void PNpcRes::set_curlvl(::google::protobuf::int32 value) {
  set_has_curlvl();
  curlvl_ = value;
}

// required int32 curExp = 5;
inline bool PNpcRes::has_curexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PNpcRes::set_has_curexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PNpcRes::clear_has_curexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PNpcRes::clear_curexp() {
  curexp_ = 0;
  clear_has_curexp();
}
inline ::google::protobuf::int32 PNpcRes::curexp() const {
  return curexp_;
}
inline void PNpcRes::set_curexp(::google::protobuf::int32 value) {
  set_has_curexp();
  curexp_ = value;
}

// -------------------------------------------------------------------

// PItemRes

// required int32 itemId = 1;
inline bool PItemRes::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PItemRes::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PItemRes::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PItemRes::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 PItemRes::itemid() const {
  return itemid_;
}
inline void PItemRes::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 itemNum = 2;
inline bool PItemRes::has_itemnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PItemRes::set_has_itemnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PItemRes::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PItemRes::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 PItemRes::itemnum() const {
  return itemnum_;
}
inline void PItemRes::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// -------------------------------------------------------------------

// PResultReq

// required int32 gateId = 1;
inline bool PResultReq::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PResultReq::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PResultReq::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PResultReq::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 PResultReq::gateid() const {
  return gateid_;
}
inline void PResultReq::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
}

// required int32 xId = 2;
inline bool PResultReq::has_xid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PResultReq::set_has_xid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PResultReq::clear_has_xid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PResultReq::clear_xid() {
  xid_ = 0;
  clear_has_xid();
}
inline ::google::protobuf::int32 PResultReq::xid() const {
  return xid_;
}
inline void PResultReq::set_xid(::google::protobuf::int32 value) {
  set_has_xid();
  xid_ = value;
}

// required int32 star = 3;
inline bool PResultReq::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PResultReq::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PResultReq::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PResultReq::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 PResultReq::star() const {
  return star_;
}
inline void PResultReq::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// PResultResp

// required int32 star = 1;
inline bool PResultResp::has_star() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PResultResp::set_has_star() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PResultResp::clear_has_star() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PResultResp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 PResultResp::star() const {
  return star_;
}
inline void PResultResp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// required int32 groupLvl = 2;
inline bool PResultResp::has_grouplvl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PResultResp::set_has_grouplvl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PResultResp::clear_has_grouplvl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PResultResp::clear_grouplvl() {
  grouplvl_ = 0;
  clear_has_grouplvl();
}
inline ::google::protobuf::int32 PResultResp::grouplvl() const {
  return grouplvl_;
}
inline void PResultResp::set_grouplvl(::google::protobuf::int32 value) {
  set_has_grouplvl();
  grouplvl_ = value;
}

// required int32 curGroupLvl = 3;
inline bool PResultResp::has_curgrouplvl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PResultResp::set_has_curgrouplvl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PResultResp::clear_has_curgrouplvl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PResultResp::clear_curgrouplvl() {
  curgrouplvl_ = 0;
  clear_has_curgrouplvl();
}
inline ::google::protobuf::int32 PResultResp::curgrouplvl() const {
  return curgrouplvl_;
}
inline void PResultResp::set_curgrouplvl(::google::protobuf::int32 value) {
  set_has_curgrouplvl();
  curgrouplvl_ = value;
}

// required int32 groupExp = 4;
inline bool PResultResp::has_groupexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PResultResp::set_has_groupexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PResultResp::clear_has_groupexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PResultResp::clear_groupexp() {
  groupexp_ = 0;
  clear_has_groupexp();
}
inline ::google::protobuf::int32 PResultResp::groupexp() const {
  return groupexp_;
}
inline void PResultResp::set_groupexp(::google::protobuf::int32 value) {
  set_has_groupexp();
  groupexp_ = value;
}

// required int32 coin = 5;
inline bool PResultResp::has_coin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PResultResp::set_has_coin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PResultResp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PResultResp::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 PResultResp::coin() const {
  return coin_;
}
inline void PResultResp::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
}

// repeated .PNpcRes npcs = 6;
inline int PResultResp::npcs_size() const {
  return npcs_.size();
}
inline void PResultResp::clear_npcs() {
  npcs_.Clear();
}
inline const ::PNpcRes& PResultResp::npcs(int index) const {
  return npcs_.Get(index);
}
inline ::PNpcRes* PResultResp::mutable_npcs(int index) {
  return npcs_.Mutable(index);
}
inline ::PNpcRes* PResultResp::add_npcs() {
  return npcs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PNpcRes >&
PResultResp::npcs() const {
  return npcs_;
}
inline ::google::protobuf::RepeatedPtrField< ::PNpcRes >*
PResultResp::mutable_npcs() {
  return &npcs_;
}

// repeated .PItemRes items = 7;
inline int PResultResp::items_size() const {
  return items_.size();
}
inline void PResultResp::clear_items() {
  items_.Clear();
}
inline const ::PItemRes& PResultResp::items(int index) const {
  return items_.Get(index);
}
inline ::PItemRes* PResultResp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::PItemRes* PResultResp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PItemRes >&
PResultResp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::PItemRes >*
PResultResp::mutable_items() {
  return &items_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gate_2eproto__INCLUDED
