// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: npc.proto

#ifndef PROTOBUF_npc_2eproto__INCLUDED
#define PROTOBUF_npc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "item.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_npc_2eproto();
void protobuf_AssignDesc_npc_2eproto();
void protobuf_ShutdownFile_npc_2eproto();

class PNpc;
class PAddOrRemoveNpc;

// ===================================================================

class PNpc : public ::google::protobuf::Message {
 public:
  PNpc();
  virtual ~PNpc();

  PNpc(const PNpc& from);

  inline PNpc& operator=(const PNpc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PNpc& default_instance();

  void Swap(PNpc* other);

  // implements Message ----------------------------------------------

  PNpc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PNpc& from);
  void MergeFrom(const PNpc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required string npcName = 2;
  inline bool has_npcname() const;
  inline void clear_npcname();
  static const int kNpcNameFieldNumber = 2;
  inline const ::std::string& npcname() const;
  inline void set_npcname(const ::std::string& value);
  inline void set_npcname(const char* value);
  inline void set_npcname(const char* value, size_t size);
  inline ::std::string* mutable_npcname();
  inline ::std::string* release_npcname();
  inline void set_allocated_npcname(::std::string* npcname);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated int32 skillIdList = 4;
  inline int skillidlist_size() const;
  inline void clear_skillidlist();
  static const int kSkillIdListFieldNumber = 4;
  inline ::google::protobuf::int32 skillidlist(int index) const;
  inline void set_skillidlist(int index, ::google::protobuf::int32 value);
  inline void add_skillidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      skillidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_skillidlist();

  // required int32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 star = 6;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 6;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // required int64 npcId = 7;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 7;
  inline ::google::protobuf::int64 npcid() const;
  inline void set_npcid(::google::protobuf::int64 value);

  // required int32 spriteId = 8;
  inline bool has_spriteid() const;
  inline void clear_spriteid();
  static const int kSpriteIdFieldNumber = 8;
  inline ::google::protobuf::int32 spriteid() const;
  inline void set_spriteid(::google::protobuf::int32 value);

  // required int32 exp = 9;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 9;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated .PItem equipList = 10;
  inline int equiplist_size() const;
  inline void clear_equiplist();
  static const int kEquipListFieldNumber = 10;
  inline const ::PItem& equiplist(int index) const;
  inline ::PItem* mutable_equiplist(int index);
  inline ::PItem* add_equiplist();
  inline const ::google::protobuf::RepeatedPtrField< ::PItem >&
      equiplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PItem >*
      mutable_equiplist();

  // @@protoc_insertion_point(class_scope:PNpc)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_npcname();
  inline void clear_has_npcname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_spriteid();
  inline void clear_has_spriteid();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::std::string* npcname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skillidlist_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int64 npcid_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 spriteid_;
  ::google::protobuf::RepeatedPtrField< ::PItem > equiplist_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_npc_2eproto();
  friend void protobuf_AssignDesc_npc_2eproto();
  friend void protobuf_ShutdownFile_npc_2eproto();

  void InitAsDefaultInstance();
  static PNpc* default_instance_;
};
// -------------------------------------------------------------------

class PAddOrRemoveNpc : public ::google::protobuf::Message {
 public:
  PAddOrRemoveNpc();
  virtual ~PAddOrRemoveNpc();

  PAddOrRemoveNpc(const PAddOrRemoveNpc& from);

  inline PAddOrRemoveNpc& operator=(const PAddOrRemoveNpc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PAddOrRemoveNpc& default_instance();

  void Swap(PAddOrRemoveNpc* other);

  // implements Message ----------------------------------------------

  PAddOrRemoveNpc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PAddOrRemoveNpc& from);
  void MergeFrom(const PAddOrRemoveNpc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PNpc npcs = 1;
  inline int npcs_size() const;
  inline void clear_npcs();
  static const int kNpcsFieldNumber = 1;
  inline const ::PNpc& npcs(int index) const;
  inline ::PNpc* mutable_npcs(int index);
  inline ::PNpc* add_npcs();
  inline const ::google::protobuf::RepeatedPtrField< ::PNpc >&
      npcs() const;
  inline ::google::protobuf::RepeatedPtrField< ::PNpc >*
      mutable_npcs();

  // required bool addOrRemove = 2;
  inline bool has_addorremove() const;
  inline void clear_addorremove();
  static const int kAddOrRemoveFieldNumber = 2;
  inline bool addorremove() const;
  inline void set_addorremove(bool value);

  // @@protoc_insertion_point(class_scope:PAddOrRemoveNpc)
 private:
  inline void set_has_addorremove();
  inline void clear_has_addorremove();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PNpc > npcs_;
  bool addorremove_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_npc_2eproto();
  friend void protobuf_AssignDesc_npc_2eproto();
  friend void protobuf_ShutdownFile_npc_2eproto();

  void InitAsDefaultInstance();
  static PAddOrRemoveNpc* default_instance_;
};
// ===================================================================


// ===================================================================

// PNpc

// required int64 roleId = 1;
inline bool PNpc::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PNpc::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PNpc::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PNpc::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PNpc::roleid() const {
  return roleid_;
}
inline void PNpc::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string npcName = 2;
inline bool PNpc::has_npcname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PNpc::set_has_npcname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PNpc::clear_has_npcname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PNpc::clear_npcname() {
  if (npcname_ != &::google::protobuf::internal::kEmptyString) {
    npcname_->clear();
  }
  clear_has_npcname();
}
inline const ::std::string& PNpc::npcname() const {
  return *npcname_;
}
inline void PNpc::set_npcname(const ::std::string& value) {
  set_has_npcname();
  if (npcname_ == &::google::protobuf::internal::kEmptyString) {
    npcname_ = new ::std::string;
  }
  npcname_->assign(value);
}
inline void PNpc::set_npcname(const char* value) {
  set_has_npcname();
  if (npcname_ == &::google::protobuf::internal::kEmptyString) {
    npcname_ = new ::std::string;
  }
  npcname_->assign(value);
}
inline void PNpc::set_npcname(const char* value, size_t size) {
  set_has_npcname();
  if (npcname_ == &::google::protobuf::internal::kEmptyString) {
    npcname_ = new ::std::string;
  }
  npcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PNpc::mutable_npcname() {
  set_has_npcname();
  if (npcname_ == &::google::protobuf::internal::kEmptyString) {
    npcname_ = new ::std::string;
  }
  return npcname_;
}
inline ::std::string* PNpc::release_npcname() {
  clear_has_npcname();
  if (npcname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = npcname_;
    npcname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PNpc::set_allocated_npcname(::std::string* npcname) {
  if (npcname_ != &::google::protobuf::internal::kEmptyString) {
    delete npcname_;
  }
  if (npcname) {
    set_has_npcname();
    npcname_ = npcname;
  } else {
    clear_has_npcname();
    npcname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 level = 3;
inline bool PNpc::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PNpc::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PNpc::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PNpc::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PNpc::level() const {
  return level_;
}
inline void PNpc::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated int32 skillIdList = 4;
inline int PNpc::skillidlist_size() const {
  return skillidlist_.size();
}
inline void PNpc::clear_skillidlist() {
  skillidlist_.Clear();
}
inline ::google::protobuf::int32 PNpc::skillidlist(int index) const {
  return skillidlist_.Get(index);
}
inline void PNpc::set_skillidlist(int index, ::google::protobuf::int32 value) {
  skillidlist_.Set(index, value);
}
inline void PNpc::add_skillidlist(::google::protobuf::int32 value) {
  skillidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PNpc::skillidlist() const {
  return skillidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PNpc::mutable_skillidlist() {
  return &skillidlist_;
}

// required int32 quality = 5;
inline bool PNpc::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PNpc::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PNpc::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PNpc::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 PNpc::quality() const {
  return quality_;
}
inline void PNpc::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// required int32 star = 6;
inline bool PNpc::has_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PNpc::set_has_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PNpc::clear_has_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PNpc::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 PNpc::star() const {
  return star_;
}
inline void PNpc::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// required int64 npcId = 7;
inline bool PNpc::has_npcid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PNpc::set_has_npcid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PNpc::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PNpc::clear_npcid() {
  npcid_ = GOOGLE_LONGLONG(0);
  clear_has_npcid();
}
inline ::google::protobuf::int64 PNpc::npcid() const {
  return npcid_;
}
inline void PNpc::set_npcid(::google::protobuf::int64 value) {
  set_has_npcid();
  npcid_ = value;
}

// required int32 spriteId = 8;
inline bool PNpc::has_spriteid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PNpc::set_has_spriteid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PNpc::clear_has_spriteid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PNpc::clear_spriteid() {
  spriteid_ = 0;
  clear_has_spriteid();
}
inline ::google::protobuf::int32 PNpc::spriteid() const {
  return spriteid_;
}
inline void PNpc::set_spriteid(::google::protobuf::int32 value) {
  set_has_spriteid();
  spriteid_ = value;
}

// required int32 exp = 9;
inline bool PNpc::has_exp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PNpc::set_has_exp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PNpc::clear_has_exp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PNpc::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 PNpc::exp() const {
  return exp_;
}
inline void PNpc::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated .PItem equipList = 10;
inline int PNpc::equiplist_size() const {
  return equiplist_.size();
}
inline void PNpc::clear_equiplist() {
  equiplist_.Clear();
}
inline const ::PItem& PNpc::equiplist(int index) const {
  return equiplist_.Get(index);
}
inline ::PItem* PNpc::mutable_equiplist(int index) {
  return equiplist_.Mutable(index);
}
inline ::PItem* PNpc::add_equiplist() {
  return equiplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PItem >&
PNpc::equiplist() const {
  return equiplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PItem >*
PNpc::mutable_equiplist() {
  return &equiplist_;
}

// -------------------------------------------------------------------

// PAddOrRemoveNpc

// repeated .PNpc npcs = 1;
inline int PAddOrRemoveNpc::npcs_size() const {
  return npcs_.size();
}
inline void PAddOrRemoveNpc::clear_npcs() {
  npcs_.Clear();
}
inline const ::PNpc& PAddOrRemoveNpc::npcs(int index) const {
  return npcs_.Get(index);
}
inline ::PNpc* PAddOrRemoveNpc::mutable_npcs(int index) {
  return npcs_.Mutable(index);
}
inline ::PNpc* PAddOrRemoveNpc::add_npcs() {
  return npcs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PNpc >&
PAddOrRemoveNpc::npcs() const {
  return npcs_;
}
inline ::google::protobuf::RepeatedPtrField< ::PNpc >*
PAddOrRemoveNpc::mutable_npcs() {
  return &npcs_;
}

// required bool addOrRemove = 2;
inline bool PAddOrRemoveNpc::has_addorremove() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PAddOrRemoveNpc::set_has_addorremove() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PAddOrRemoveNpc::clear_has_addorremove() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PAddOrRemoveNpc::clear_addorremove() {
  addorremove_ = false;
  clear_has_addorremove();
}
inline bool PAddOrRemoveNpc::addorremove() const {
  return addorremove_;
}
inline void PAddOrRemoveNpc::set_addorremove(bool value) {
  set_has_addorremove();
  addorremove_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_npc_2eproto__INCLUDED
