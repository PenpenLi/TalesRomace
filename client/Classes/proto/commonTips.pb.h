// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commonTips.proto

#ifndef PROTOBUF_commonTips_2eproto__INCLUDED
#define PROTOBUF_commonTips_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_commonTips_2eproto();
void protobuf_AssignDesc_commonTips_2eproto();
void protobuf_ShutdownFile_commonTips_2eproto();

class PTipsResp;

// ===================================================================

class PTipsResp : public ::google::protobuf::Message {
 public:
  PTipsResp();
  virtual ~PTipsResp();

  PTipsResp(const PTipsResp& from);

  inline PTipsResp& operator=(const PTipsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTipsResp& default_instance();

  void Swap(PTipsResp* other);

  // implements Message ----------------------------------------------

  PTipsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTipsResp& from);
  void MergeFrom(const PTipsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 msgId = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);

  // repeated string param = 3;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline const ::std::string& param(int index) const;
  inline ::std::string* mutable_param(int index);
  inline void set_param(int index, const ::std::string& value);
  inline void set_param(int index, const char* value);
  inline void set_param(int index, const char* value, size_t size);
  inline ::std::string* add_param();
  inline void add_param(const ::std::string& value);
  inline void add_param(const char* value);
  inline void add_param(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // @@protoc_insertion_point(class_scope:PTipsResp)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_commonTips_2eproto();
  friend void protobuf_AssignDesc_commonTips_2eproto();
  friend void protobuf_ShutdownFile_commonTips_2eproto();

  void InitAsDefaultInstance();
  static PTipsResp* default_instance_;
};
// ===================================================================


// ===================================================================

// PTipsResp

// optional int32 state = 1;
inline bool PTipsResp::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTipsResp::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTipsResp::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTipsResp::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 PTipsResp::state() const {
  return state_;
}
inline void PTipsResp::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 msgId = 2;
inline bool PTipsResp::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTipsResp::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTipsResp::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTipsResp::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 PTipsResp::msgid() const {
  return msgid_;
}
inline void PTipsResp::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
}

// repeated string param = 3;
inline int PTipsResp::param_size() const {
  return param_.size();
}
inline void PTipsResp::clear_param() {
  param_.Clear();
}
inline const ::std::string& PTipsResp::param(int index) const {
  return param_.Get(index);
}
inline ::std::string* PTipsResp::mutable_param(int index) {
  return param_.Mutable(index);
}
inline void PTipsResp::set_param(int index, const ::std::string& value) {
  param_.Mutable(index)->assign(value);
}
inline void PTipsResp::set_param(int index, const char* value) {
  param_.Mutable(index)->assign(value);
}
inline void PTipsResp::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PTipsResp::add_param() {
  return param_.Add();
}
inline void PTipsResp::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
}
inline void PTipsResp::add_param(const char* value) {
  param_.Add()->assign(value);
}
inline void PTipsResp::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PTipsResp::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PTipsResp::mutable_param() {
  return &param_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_commonTips_2eproto__INCLUDED
